{"version":3,"file":"contentScript.js","mappings":";;AAAA;AACA;AACA;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://gather-helper/webpack/bootstrap","webpack://gather-helper/webpack/runtime/make namespace object","webpack://gather-helper/./src/contentScript/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const head = document.head;\nconst script = document.createElement(\"script\");\nscript.src = chrome.runtime.getURL(\"script.js\");\nscript.onload = () => {\n    console.log(\"Injected script loaded successfully\");\n};\nscript.onerror = (error) => {\n    console.error(\"Error loading injected script:\", error);\n};\nhead.appendChild(script);\nchrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n    const message = {\n        action: request.action,\n        data: { emote: request.emoticon },\n    };\n    window.postMessage(message, \"*\");\n    sendResponse({ success: true });\n    return true;\n});\nwindow.addEventListener(\"message\", (event) => {\n    console.log(\"Content script received window message:\", event.data);\n}, false);\nexport {};\n"],"names":[],"sourceRoot":""}